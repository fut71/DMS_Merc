PxPairFlag 설명

PxPairFlag::eSOLVE_CONTACT
	두 객체 간의 충돌 시 접촉을 처리하고 힘을 계산하는 데 사용. 콜백 함수 호출 x

PxPairFlag::eMODIFY_CONTACTS
	두 객체 간의 접촉 지점을 수정할 수 있는 콜백을 호출하는 데 사용. 
	onContactModify 호출

PxPairFlag::eNOTIFY_TOUCH_FOUND
	두 객체가 처음으로 접촉할 때 또는 트리거 영역에 들어올 때 콜백을 호출하는 데 사용. 
	객체 중 하나가 트리거인 경우 onTrigger 그렇지 않으면 onContact 호출

PxPairFlag::eNOTIFY_TOUCH_PERSISTS
	두 객체가 지속적으로 접촉 중일 때 매 프레임마다 콜백을 호출하는 데 사용.
	매 프레임마다 onContact 호출

PxPairFlag::eNOTIFY_TOUCH_LOST
	두 객체 간의 접촉이 끝났을 때 또는 트리거 영역에서 나갈 때 콜백을 호출하는 데 사용.
	객체 중 하나가 트리거인 경우 onTrigger 그렇지 않으면 onContact 호출

PxPairFlag::ePRE_SOLVER_VELOCITY
	충돌 해결 전에 물체의 속도를 콜백에서 제공하는 데 사용.
	속도 정보를 onContact에 포함시킴

PxPairFlag::ePOST_SOLVER_VELOCITY
	충돌 해결 후의 물체 속도를 콜백에서 제공하는 데 사용.
	속도 정보를 onContact에 포함시킴

PxPairFlag::eCONTACT_DEFAULT
	두 객체 간의 기본 충돌 처리에 사용.

PxPairFlag::eTRIGGER_DEFAULT
	트리거 설정에 사용.

PxFilterFlag 설명

PxFilterFlag::eKILL
	두 객체의 경계가 겹치는 동안 충돌 쌍을 무시

PxFilterFlag::eSUPPRESS
	두 객체의 경계가 겹치거나 필터링 관련 데이터가 병경될 때까지 충돌 쌍을 무시, 필터 데이터가 변경되면 다시 필터링이 수행

PxFilterFlag::eDEFAULT
	기본 플래그, 경계가 겹쳤을 때 한 번만 충돌 속성을 설정하고, 다시 필터링이 필요할 때까지 추가적인 요청 없음

사용 예시
// 금화와 유닛은 금화가 땅에 붙어있을때만, OnTrigger 발동(충돌 반응은 없음)
	// 0번의 필터 데이터의 word0이 타입 골드, word1이 on ground를 포함하며, 1번의 필터 데이터의 word0이 타입 유닛일 경우
	// 1번의 필터 데이터의 word0이 타입 골드, word1이 on ground를 포함하며, 0번의 필터 데이터의 word0이 타입 유닛일 경우
if (((_filterData0.word0 & TYPE_GOLD) && (_filterData0.word1 & ATTR_ON_GROUND) && (_filterData1.word0 & TYPE_UNIT))
	|| ((_filterData1.word0 & TYPE_GOLD) && (_filterData1.word1 & ATTR_ON_GROUND) && (_filterData0.word0 & TYPE_UNIT)))
{
	_pairFlags = physx::PxPairFlag::eTRIGGER_DEFAULT | physx::PxPairFlag::eNOTIFY_TOUCH_FOUND | physx::PxPairFlag::eNOTIFY_TOUCH_LOST;	//
	return physx::PxFilterFlag::eSUPPRESS;
}

외부에서 
auto& filterData = GetFilterData(_pEntity)로 해당 객체의 리지드바디의 필터 데이터를 가져와서
filterData |= 추가할 플래그;	// 플래그 추가
혹은
filterData = 플래그;	// 플래그 전체 초기화
m_pPhysicsManager->SetFilterData(_pEntity, filterData);
혹은 
physx::PxShape* shape[1];
_pEntity->GetComponent<Rigidbody>().m_pRigidActor->getShapes(shape,1);
m_pPhysucsManager->SetFilterData(shape[0], filterData);
하면 플래그 변경 가능

이후 CustomCallback 객체의 내부 콜백 함수들에 발생시킬 로직을 호출